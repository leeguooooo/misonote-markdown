{
  "name": "misonote-markdown",
  "version": "3.0.0",
  "private": true,
  "scripts": {
    "dev": "next dev --turbopack --port 3001",
    "ws:dev": "tsx lib/websocket/simple-server.ts",
    "dev:all": "concurrently \"pnpm dev\" \"pnpm ws:dev\"",
    "prebuild": "node scripts/pre-build-check.js",
    "prebuild:docker": "node scripts/docker-prebuild.js",
    "build": "next build",
    "build:docker": "DOCKER_BUILD=true SKIP_PREBUILD=true next build",
    "start": "next start",
    "lint": "next lint",
    "test": "vitest",
    "test:run": "vitest run",
    "test:ui": "vitest --ui",
    "test:coverage": "vitest run --coverage",
    "test:watch": "vitest --watch",
    "postinstall": "[ \"$SKIP_POSTINSTALL\" = \"true\" ] || (echo 'ℹ️  如果看到构建脚本警告，请运行: pnpm approve-builds' && exit 0)",
    "pm2:start": "pm2 start ecosystem.config.js",
    "pm2:stop": "pm2 stop docs-platform",
    "pm2:restart": "pm2 restart docs-platform",
    "pm2:delete": "pm2 delete docs-platform",
    "pm2:logs": "pm2 logs docs-platform --lines 50",
    "pm2:status": "pm2 status",
    "docker:build": "docker build -f Dockerfile -t leeguo/misonote-markdown:latest .",
    "docker:push": "docker push leeguo/misonote-markdown:latest",
    "docker:build-and-push": "pnpm docker:build && pnpm docker:push",
    "docker:run": "docker run -d -p 3001:3001 --name misonote leeguo/misonote-markdown:latest",
    "docker:stop": "docker stop misonote && docker rm misonote",
    "docker:logs": "docker logs -f misonote",
    "docker:shell": "docker exec -it misonote sh",
    "license:generate-keys": "node misonote-license-server/scripts/license-generator.js generate-keys",
    "license:generate": "node misonote-license-server/scripts/license-generator.js generate",
    "license:verify": "node misonote-license-server/scripts/license-generator.js verify",
    "license:list": "node misonote-license-server/scripts/license-generator.js list",
    "license:test": "node misonote-license-server/scripts/test-license-verification.js",
    "security:check": "node misonote-license-server/scripts/security-check.js",
    "security:setup": "node scripts/generate-password.js",
    "security:verify": "node scripts/verify-password.js",
    "install:full": "bash scripts/install.sh",
    "db:create": "tsx scripts/create-database.ts",
    "db:init": "tsx scripts/init-pg-only.ts",
    "db:init:base": "tsx lib/db/init-database.ts",
    "db:init:force": "tsx lib/db/init-database.ts --force",
    "db:init:enterprise": "tsx lib/db/init-database.ts --enterprise",
    "db:migrate": "tsx scripts/migrate-schema.ts",
    "db:migrate:from-sqlite": "tsx scripts/migrate-to-postgres.ts",
    "db:migrate:docs": "tsx scripts/migrate-docs-to-database.ts",
    "db:migrate:docs:dry": "tsx scripts/migrate-docs-to-database.ts --dry-run",
    "db:migrate:docs:force": "tsx scripts/migrate-docs-to-database.ts --force",
    "db:migrate:docs:verify": "tsx scripts/migrate-docs-to-database.ts --verify",
    "db:status": "tsx -e \"import { getDatabaseStatus } from './lib/db/init-database'; getDatabaseStatus().then(console.log)\"",
    "db:test": "tsx scripts/test-database-adapter.ts",
    "clean": "rm -rf .next && rm -rf logs/*.log",
    "setup:business": "node scripts/setup-business-architecture.js"
  },
  "dependencies": {
    "@radix-ui/react-dialog": "^1.1.14",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-scroll-area": "^1.2.9",
    "@radix-ui/react-select": "^2.2.5",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-tabs": "^1.1.12",
    "@tiptap/extension-collaboration": "^2.12.0",
    "@tiptap/extension-collaboration-cursor": "^2.12.0",
    "@tiptap/extension-placeholder": "^2.12.0",
    "@tiptap/react": "^2.12.0",
    "@tiptap/starter-kit": "^2.12.0",
    "@types/jszip": "^3.4.1",
    "autoprefixer": "^10.4.21",
    "axios": "^1.9.0",
    "bcryptjs": "^3.0.2",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "dotenv": "^16.5.0",
    "fuse.js": "^7.1.0",
    "gray-matter": "^4.0.3",
    "highlight.js": "^11.11.1",
    "jsonwebtoken": "^9.0.2",
    "jszip": "^3.10.1",
    "lru-cache": "^11.1.0",
    "lucide-react": "^0.511.0",
    "marked": "^15.0.12",
    "mermaid": "^11.6.0",
    "next": "15.3.2",
    "pg": "^8.11.3",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "react-markdown": "^10.1.0",
    "rehype-highlight": "^7.0.2",
    "remark-gfm": "^4.0.1",
    "tailwind-merge": "^3.3.0",
    "uuid": "^11.1.0",
    "winston": "^3.17.0",
    "ws": "^8.18.0",
    "y-websocket": "^3.0.0",
    "yjs": "^13.6.27"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3",
    "@tailwindcss/postcss": "^4",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/bcryptjs": "^3.0.0",
    "@types/jsonwebtoken": "^9.0.9",
    "@types/node": "^20",
    "@types/pg": "^8.10.9",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "@types/uuid": "^10.0.0",
    "@types/ws": "^8.5.12",
    "@vitest/ui": "^3.1.4",
    "concurrently": "^8.2.2",
    "eslint": "^9",
    "eslint-config-next": "15.3.2",
    "jsdom": "^26.1.0",
    "tailwindcss": "^4",
    "tsx": "^4.19.4",
    "typescript": "^5",
    "vitest": "^3.1.4"
  }
}
